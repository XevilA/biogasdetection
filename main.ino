/*
  ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏î‡∏Å‡πä‡∏≤‡∏ã‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ Arduino
  Biogas Monitoring System with Arduino
  
  ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:
  - MQ-4: ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏î‡∏Å‡πä‡∏≤‡∏ã‡∏°‡∏µ‡πÄ‡∏ó‡∏ô (CH4) - Pin A0
  - MQ-135: ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏î‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢/CO2 - Pin A1  
  - MQ-136: ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏î‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÄ‡∏à‡∏ô‡∏ã‡∏±‡∏•‡πÑ‡∏ü‡∏î‡πå (H2S) - Pin A2
  - pH Sensor: ‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏î-‡∏î‡πà‡∏≤‡∏á - Pin A3
  
  LED ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:
  - Pin D12: LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏Å‡∏ï‡∏¥)
  - Pin D13: LED ‡πÅ‡∏î‡∏á (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏†‡∏±‡∏¢)
  
  ‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤: Arduino Biogas Monitor
  ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô: 1.0
  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: 24 ‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏° 2568
*/

#include <SoftwareSerial.h>
#include <EEPROM.h>

// ===========================================
// ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ GPIO ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
// ===========================================

// ‡∏Ç‡∏≤ Analog ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
#define MQ4_PIN A0      // ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Å‡πä‡∏≤‡∏ã‡∏°‡∏µ‡πÄ‡∏ó‡∏ô (CH4)
#define MQ135_PIN A1    // ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Å‡πä‡∏≤‡∏ã‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢/CO2  
#define MQ136_PIN A2    // ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Å‡πä‡∏≤‡∏ã H2S
#define PH_PIN A3       // ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå pH

// ‡∏Ç‡∏≤ Digital ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LED
#define LED_GREEN_PIN 12  // LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏Å‡∏ï‡∏¥)
#define LED_RED_PIN 13    // LED ‡πÅ‡∏î‡∏á (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏†‡∏±‡∏¢)

// ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
#define VOLTAGE_REF 5.0
#define ADC_RESOLUTION 1024.0
#define SERIAL_BAUD 9600

// ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
const int NUM_READINGS = 10;
const int READING_DELAY = 100; // ‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
const int MAIN_LOOP_DELAY = 3000; // 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

// ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏†‡∏±‡∏¢ (ppm)
const float METHANE_WARNING_LEVEL = 1000.0;    // 1000 ppm
const float METHANE_DANGER_LEVEL = 5000.0;     // 5000 ppm  
const float AMMONIA_WARNING_LEVEL = 25.0;      // 25 ppm
const float AMMONIA_DANGER_LEVEL = 50.0;       // 50 ppm
const float H2S_WARNING_LEVEL = 10.0;          // 10 ppm
const float H2S_DANGER_LEVEL = 20.0;           // 20 ppm

// ‡∏£‡∏∞‡∏î‡∏±‡∏ö pH ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
const float PH_MIN_OPTIMAL = 6.5;
const float PH_MAX_OPTIMAL = 7.5;
const float PH_MIN_ACCEPTABLE = 6.0;
const float PH_MAX_ACCEPTABLE = 8.0;

// ===========================================
// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô
// ===========================================

// ‡∏Ñ‡πà‡∏≤‡∏î‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
int mq4_raw = 0;
int mq135_raw = 0; 
int mq136_raw = 0;
int ph_raw = 0;

// ‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô
float mq4_voltage = 0.0;
float mq135_voltage = 0.0;
float mq136_voltage = 0.0;
float ph_voltage = 0.0;

// ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß
float methane_ppm = 0.0;
float ammonia_ppm = 0.0;
float h2s_ppm = 0.0;
float ph_value = 0.0;

// ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö
bool system_warning = false;
bool system_danger = false;
unsigned long last_reading_time = 0;
unsigned long system_start_time = 0;

// ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
unsigned long total_readings = 0;
float max_methane = 0.0;
float max_ammonia = 0.0;
float max_h2s = 0.0;
float min_ph = 14.0;
float max_ph = 0.0;

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Setup
// ===========================================

void setup() {
  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Serial Communication
  Serial.begin(SERIAL_BAUD);
  
  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≤ Digital
  pinMode(LED_GREEN_PIN, OUTPUT);
  pinMode(LED_RED_PIN, OUTPUT);
  
  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≤ Analog ‡πÄ‡∏õ‡πá‡∏ô Input (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ï‡πà‡∏ó‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô)
  pinMode(MQ4_PIN, INPUT);
  pinMode(MQ135_PIN, INPUT);
  pinMode(MQ136_PIN, INPUT);
  pinMode(PH_PIN, INPUT);
  
  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
  system_start_time = millis();
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  printWelcomeMessage();
  
  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ Calibration ‡∏Ç‡∏≠‡∏á pH (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  loadCalibrationData();
  
  // ‡∏≠‡∏∏‡πà‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
  warmupSensors();
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö LED
  testLEDs();
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤
  printConfiguration();
  
  Serial.println("üí° ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©:");
  Serial.println("   ‡∏û‡∏¥‡∏°‡∏û‡πå 'CAL' ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Calibrate ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå pH");
  Serial.println("   ‡∏û‡∏¥‡∏°‡∏û‡πå 'RESET' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥");
  Serial.println("   ‡∏û‡∏¥‡∏°‡∏û‡πå 'DIAG' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö");
  Serial.println();
  
  Serial.println("‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!");
  Serial.println("=====================================");
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Loop ‡∏´‡∏•‡∏±‡∏Å
// ===========================================

void loop() {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å Serial
  checkSerialCommands();
  
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  readAllSensors();
  
  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  convertSensorValues();
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
  displayResults();
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
  checkSafetyLevels();
  
  // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° LED
  controlLEDs();
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
  showRecommendations();
  
  // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
  updateStatistics();
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ (‡∏ó‡∏∏‡∏Å 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)
  if(total_readings % 10 == 0) {
    showStatistics();
  }
  
  Serial.println("-------------------------------------");
  
  // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
  delay(MAIN_LOOP_DELAY);
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
// ===========================================

void printWelcomeMessage() {
  Serial.println();
  Serial.println("=====================================");
  Serial.println("   ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏î‡∏Å‡πä‡∏≤‡∏ã‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û Arduino");
  Serial.println("   Biogas Monitoring System v1.0");
  Serial.println("=====================================");
  Serial.println();
  Serial.println("‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á:");
  Serial.println("üî¨ MQ-4   : ‡∏Å‡πä‡∏≤‡∏ã‡∏°‡∏µ‡πÄ‡∏ó‡∏ô (CH4) - Pin A0");
  Serial.println("üî¨ MQ-135 : ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢/CO2 - Pin A1");  
  Serial.println("üî¨ MQ-136 : ‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÄ‡∏à‡∏ô‡∏ã‡∏±‡∏•‡πÑ‡∏ü‡∏î‡πå (H2S) - Pin A2");
  Serial.println("üî¨ pH BNC : pH Detection Module with BNC Probe - Pin A3");
  Serial.println();
  Serial.println("LED ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:");
  Serial.println("üíö LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß : ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏Å‡∏ï‡∏¥ - Pin D12");
  Serial.println("‚ù§Ô∏è LED ‡πÅ‡∏î‡∏á   : ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏†‡∏±‡∏¢ - Pin D13");
  Serial.println();
  Serial.println("üìã ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå pH: Liquid pH Value Detection Sensor Module");
  Serial.println("   - BNC Electrode Probe");
  Serial.println("   - ‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î: pH 0-14");
  Serial.println("   - ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: 0-60¬∞C");
  Serial.println("   - ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥: ¬±0.1 pH");
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∏‡πà‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
// ===========================================

void warmupSensors() {
  Serial.println("üî• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏∏‡πà‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå MQ...");
  Serial.println("‚è∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠ 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥");
  Serial.println();
  
  // ‡πÅ‡∏™‡∏î‡∏á Progress Bar
  for(int i = 30; i > 0; i--) {
    // LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏∏‡πà‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
    digitalWrite(LED_GREEN_PIN, HIGH);
    delay(250);
    digitalWrite(LED_GREEN_PIN, LOW);
    delay(250);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    Serial.print("‚è±Ô∏è  ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤: ");
    if(i < 10) Serial.print("0");
    Serial.print(i);
    Serial.print(" ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ");
    
    // ‡πÅ‡∏™‡∏î‡∏á Progress Bar
    int progress = ((30 - i) * 20) / 30;
    Serial.print("[");
    for(int j = 0; j < 20; j++) {
      if(j < progress) Serial.print("‚ñà");
      else Serial.print("‚ñë");
    }
    Serial.print("] ");
    Serial.print(((30 - i) * 100) / 30);
    Serial.println("%");
    
    delay(500);
  }
  
  // ‡πÄ‡∏õ‡∏¥‡∏î LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
  digitalWrite(LED_GREEN_PIN, HIGH);
  Serial.println();
  Serial.println("‚úÖ ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!");
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö LED
// ===========================================

void testLEDs() {
  Serial.println("üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö LED...");
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
  Serial.print("üíö LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß... ");
  digitalWrite(LED_GREEN_PIN, HIGH);
  digitalWrite(LED_RED_PIN, LOW);
  delay(1000);
  Serial.println("OK");
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö LED ‡πÅ‡∏î‡∏á  
  Serial.print("‚ù§Ô∏è LED ‡πÅ‡∏î‡∏á... ");
  digitalWrite(LED_GREEN_PIN, LOW);
  digitalWrite(LED_RED_PIN, HIGH);
  delay(1000);
  Serial.println("OK");
  
  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
  Serial.print("üü° LED ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà... ");
  digitalWrite(LED_GREEN_PIN, HIGH);
  digitalWrite(LED_RED_PIN, HIGH);
  delay(1000);
  Serial.println("OK");
  
  // ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà
  digitalWrite(LED_GREEN_PIN, LOW);
  digitalWrite(LED_RED_PIN, LOW);
  delay(500);
  
  Serial.println("‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö LED ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥");
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤
// ===========================================

void printConfiguration() {
  Serial.println("‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö:");
  Serial.println("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
  Serial.print("‚îÇ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏°‡∏µ‡πÄ‡∏ó‡∏ô    : "); 
  Serial.print(METHANE_WARNING_LEVEL, 0); Serial.println(" ppm        ‚îÇ");
  Serial.print("‚îÇ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏°‡∏µ‡πÄ‡∏ó‡∏ô  : "); 
  Serial.print(METHANE_DANGER_LEVEL, 0); Serial.println(" ppm       ‚îÇ");
  Serial.print("‚îÇ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢ : "); 
  Serial.print(AMMONIA_WARNING_LEVEL, 0); Serial.println(" ppm         ‚îÇ");
  Serial.print("‚îÇ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢: "); 
  Serial.print(AMMONIA_DANGER_LEVEL, 0); Serial.println(" ppm         ‚îÇ");
  Serial.print("‚îÇ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô H2S     : "); 
  Serial.print(H2S_WARNING_LEVEL, 0); Serial.println(" ppm         ‚îÇ");
  Serial.print("‚îÇ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ H2S   : "); 
  Serial.print(H2S_DANGER_LEVEL, 0); Serial.println(" ppm         ‚îÇ");
  Serial.print("‚îÇ pH ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°         : "); 
  Serial.print(PH_MIN_OPTIMAL, 1); Serial.print(" - "); 
  Serial.print(PH_MAX_OPTIMAL, 1); Serial.println("       ‚îÇ");
  Serial.println("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
// ===========================================

void readAllSensors() {
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ MQ-4 (‡∏°‡∏µ‡πÄ‡∏ó‡∏ô)
  mq4_raw = readSensorAverage(MQ4_PIN);
  mq4_voltage = (mq4_raw / ADC_RESOLUTION) * VOLTAGE_REF;
  
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ MQ-135 (‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢/CO2)
  mq135_raw = readSensorAverage(MQ135_PIN);
  mq135_voltage = (mq135_raw / ADC_RESOLUTION) * VOLTAGE_REF;
  
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ MQ-136 (H2S)
  mq136_raw = readSensorAverage(MQ136_PIN);
  mq136_voltage = (mq136_raw / ADC_RESOLUTION) * VOLTAGE_REF;
  
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ pH
  ph_raw = readSensorAverage(PH_PIN);
  ph_voltage = (ph_raw / ADC_RESOLUTION) * VOLTAGE_REF;
  
  // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  last_reading_time = millis();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
// ===========================================

int readSensorAverage(int pin) {
  long sum = 0;
  int validReadings = 0;
  
  for(int i = 0; i < NUM_READINGS; i++) {
    int reading = analogRead(pin);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (0-1023)
    if(reading >= 0 && reading <= 1023) {
      sum += reading;
      validReadings++;
    }
    
    delay(READING_DELAY);
  }
  
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ 0
  if(validReadings == 0) return 0;
  
  return sum / validReadings;
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
// ===========================================

void convertSensorValues() {
  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ MQ-4 ‡πÄ‡∏õ‡πá‡∏ô ppm ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô
  methane_ppm = convertMQ4ToPPM(mq4_voltage);
  
  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ MQ-135 ‡πÄ‡∏õ‡πá‡∏ô ppm ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢  
  ammonia_ppm = convertMQ135ToPPM(mq135_voltage);
  
  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ MQ-136 ‡πÄ‡∏õ‡πá‡∏ô ppm H2S
  h2s_ppm = convertMQ136ToPPM(mq136_voltage);
  
  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ pH (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ Calibrated ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  ph_value = convertToPH_Calibrated(ph_voltage);
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ MQ-4 ‡πÄ‡∏õ‡πá‡∏ô ppm ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô
// ===========================================

float convertMQ4ToPPM(float voltage) {
  // ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö MQ-4 (‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏à‡∏≤‡∏Å Datasheet)
  // ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£ Calibrate ‡∏à‡∏£‡∏¥‡∏á
  
  if(voltage <= 0.4) return 0.0;
  
  // ‡∏™‡∏π‡∏ï‡∏£: ppm = 10^((voltage - offset) / slope)
  float log_ppm = (voltage - 0.45) / 0.3;
  float ppm = pow(10, log_ppm);
  
  // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•
  if(ppm < 0) ppm = 0;
  if(ppm > 100000) ppm = 100000;
  
  return ppm;
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ MQ-135 ‡πÄ‡∏õ‡πá‡∏ô ppm ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢  
// ===========================================

float convertMQ135ToPPM(float voltage) {
  // ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö MQ-135
  // ‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢ ‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
  
  if(voltage <= 0.3) return 0.0;
  
  float log_ppm = (voltage - 0.4) / 0.35;
  float ppm = pow(10, log_ppm);
  
  if(ppm < 0) ppm = 0;
  if(ppm > 10000) ppm = 10000;
  
  return ppm;
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ MQ-136 ‡πÄ‡∏õ‡πá‡∏ô ppm H2S
// ===========================================

float convertMQ136ToPPM(float voltage) {
  // ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö MQ-136 (H2S)
  
  if(voltage <= 0.3) return 0.0;
  
  float log_ppm = (voltage - 0.42) / 0.32;
  float ppm = pow(10, log_ppm);
  
  if(ppm < 0) ppm = 0;
  if(ppm > 1000) ppm = 1000;
  
  return ppm;
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô pH
// ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Liquid pH Value Detection Sensor Module with BNC Electrode Probe
// ===========================================

float convertToPH(float voltage) {
  // ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô pH ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö BNC pH Sensor Module
  // ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà 25¬∞C ‡πÅ‡∏•‡∏∞‡∏°‡∏µ resolution ‡∏™‡∏π‡∏á
  
  // ‡∏Ñ‡πà‡∏≤ Default ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö BNC pH Sensor Module (‡∏ï‡πâ‡∏≠‡∏á Calibrate ‡∏î‡πâ‡∏ß‡∏¢ pH Buffer)
  // pH 7.0 (Neutral) ‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏∞‡πÉ‡∏´‡πâ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 2.5V
  // pH ‡∏•‡∏î‡∏•‡∏á 1 ‡∏´‡∏ô‡πà‡∏ß‡∏¢ (‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏î‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô) = ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 0.18V
  // pH ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 1 ‡∏´‡∏ô‡πà‡∏ß‡∏¢ (‡πÄ‡∏õ‡πá‡∏ô‡∏î‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô) = ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏•‡∏î‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 0.18V
  
  float neutralVoltage = 2.50;  // ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏ó‡∏µ‡πà pH = 7.0 (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£ Calibrate)
  float slope = -5.70;          // -1/0.18 ‚âà -5.70 (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏ö)
  
  // ‡∏™‡∏π‡∏ï‡∏£: pH = 7.0 + slope * (voltage - neutralVoltage)
  float ph = 7.0 + slope * (voltage - neutralVoltage);
  
  // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡πà‡∏≤ pH ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 0-14
  if(ph < 0) ph = 0;
  if(ph > 14) ph = 14;
  
  return ph;
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
// ===========================================

void displayResults() {
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
  unsigned long uptime = (millis() - system_start_time) / 1000;
  
  Serial.println("üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏î‡∏Å‡πä‡∏≤‡∏ã‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û");
  Serial.print("‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: ");
  printUptime(uptime);
  Serial.print(" | ‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà: ");
  Serial.println(++total_readings);
  Serial.println();
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏î‡∏¥‡∏ö (ADC)
  Serial.println("üî¢ ‡∏Ñ‡πà‡∏≤‡∏î‡∏¥‡∏ö (ADC 0-1023):");
  Serial.print("   MQ-4   : "); Serial.print(mq4_raw); Serial.print("/1023");
  Serial.print(" ("); Serial.print(mq4_voltage, 2); Serial.println("V)");
  Serial.print("   MQ-135 : "); Serial.print(mq135_raw); Serial.print("/1023");
  Serial.print(" ("); Serial.print(mq135_voltage, 2); Serial.println("V)");
  Serial.print("   MQ-136 : "); Serial.print(mq136_raw); Serial.print("/1023");
  Serial.print(" ("); Serial.print(mq136_voltage, 2); Serial.println("V)");
  Serial.print("   pH     : "); Serial.print(ph_raw); Serial.print("/1023");
  Serial.print(" ("); Serial.print(ph_voltage, 2); Serial.println("V)");
  Serial.println();
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß
  Serial.println("‚öóÔ∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô‡∏Å‡πä‡∏≤‡∏ã:");
  Serial.print("   üî• ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô (CH4)        : ");
  Serial.print(methane_ppm, 1); Serial.println(" ppm");
  Serial.print("   üí® ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢ (NH3)     : ");
  Serial.print(ammonia_ppm, 1); Serial.println(" ppm");
  Serial.print("   ‚ò†Ô∏è  ‡πÑ‡∏Æ‡πÇ‡∏î‡∏£‡πÄ‡∏à‡∏ô‡∏ã‡∏±‡∏•‡πÑ‡∏ü‡∏î‡πå (H2S): ");
  Serial.print(h2s_ppm, 1); Serial.println(" ppm");
  Serial.println();
  
  Serial.println("üß™ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏•‡∏ß:");
  Serial.print("   üìè ‡∏Ñ‡πà‡∏≤ pH              : ");
  Serial.print(ph_value, 2);
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ pH
  if(ph_value >= PH_MIN_OPTIMAL && ph_value <= PH_MAX_OPTIMAL) {
    Serial.println(" (‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°)");
  } else if(ph_value >= PH_MIN_ACCEPTABLE && ph_value <= PH_MAX_ACCEPTABLE) {
    Serial.println(" (‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ)");
  } else {
    Serial.println(" (‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°)");
  }
  Serial.println();
  
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏°‡∏µ‡πÄ‡∏ó‡∏ô
  float methane_percent = (methane_ppm / 10000.0) * 100.0;
  Serial.print("üî• ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏°‡∏µ‡πÄ‡∏ó‡∏ô      : ");
  Serial.print(methane_percent, 2); Serial.println("%");
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
// ===========================================

void printUptime(unsigned long seconds) {
  unsigned long hours = seconds / 3600;
  unsigned long minutes = (seconds % 3600) / 60;
  seconds = seconds % 60;
  
  if(hours < 10) Serial.print("0");
  Serial.print(hours);
  Serial.print(":");
  if(minutes < 10) Serial.print("0");
  Serial.print(minutes);
  Serial.print(":");
  if(seconds < 10) Serial.print("0");
  Serial.print(seconds);
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
// ===========================================

void checkSafetyLevels() {
  system_warning = false;
  system_danger = false;
  
  Serial.println("üõ°Ô∏è ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢:");
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏µ‡πÄ‡∏ó‡∏ô
  if(methane_ppm >= METHANE_DANGER_LEVEL) {
    Serial.println("   üö® ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô: ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å! ‡∏≠‡∏û‡∏¢‡∏û‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!");
    system_danger = true;
  } else if(methane_ppm >= METHANE_WARNING_LEVEL) {
    Serial.println("   ‚ö†Ô∏è  ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô - ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏∏‡∏Å‡πÑ‡∏´‡∏°‡πâ");
    system_warning = true;
  } else {
    Serial.println("   ‚úÖ ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢");
  }
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢
  if(ammonia_ppm >= AMMONIA_DANGER_LEVEL) {
    Serial.println("   üö® ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢: ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏≤‡∏¢‡πÉ‡∏à!");
    system_danger = true;
  } else if(ammonia_ppm >= AMMONIA_WARNING_LEVEL) {
    Serial.println("   ‚ö†Ô∏è  ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô - ‡πÉ‡∏™‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å");
    system_warning = true;
  } else {
    Serial.println("   ‚úÖ ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢");
  }
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö H2S
  if(h2s_ppm >= H2S_DANGER_LEVEL) {
    Serial.println("   üö® H2S: ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏°‡∏≤‡∏Å! ‡∏Å‡πä‡∏≤‡∏ã‡∏û‡∏¥‡∏©!");
    system_danger = true;
  } else if(h2s_ppm >= H2S_WARNING_LEVEL) {
    Serial.println("   ‚ö†Ô∏è  H2S: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô - ‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏ó‡πÑ‡∏°‡πà‡∏î‡∏µ");
    system_warning = true;
  } else {
    Serial.println("   ‚úÖ H2S: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢");
  }
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ pH
  if(ph_value < PH_MIN_ACCEPTABLE || ph_value > PH_MAX_ACCEPTABLE) {
    Serial.println("   ‚ö†Ô∏è  pH: ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° - ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏Å‡πä‡∏≤‡∏ã");
    system_warning = true;
  } else if(ph_value < PH_MIN_OPTIMAL || ph_value > PH_MAX_OPTIMAL) {
    Serial.println("   ‚ö° pH: ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ - ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°");
  } else {
    Serial.println("   ‚úÖ pH: ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏±‡∏Å");
  }
  
  Serial.println();
  
  // ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏ß‡∏°
  if(system_danger) {
    Serial.println("üö® ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö: ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ - ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!");
  } else if(system_warning) {
    Serial.println("‚ö†Ô∏è  ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö: ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô - ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á");
  } else {
    Serial.println("‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö: ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ - ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏ï‡∏¥");
  }
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° LED
// ===========================================

void controlLEDs() {
  if(system_danger) {
    // ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢: LED ‡πÅ‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡πÄ‡∏£‡πá‡∏ß
    digitalWrite(LED_RED_PIN, HIGH);
    digitalWrite(LED_GREEN_PIN, LOW);
    delay(100);
    digitalWrite(LED_RED_PIN, LOW);
    delay(100);
    digitalWrite(LED_RED_PIN, HIGH);
    delay(100);
    digitalWrite(LED_RED_PIN, LOW);
    delay(100);
  } else if(system_warning) {
    // ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: LED ‡πÅ‡∏î‡∏á‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á + LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏î‡∏±‡∏ö
    digitalWrite(LED_RED_PIN, HIGH);
    digitalWrite(LED_GREEN_PIN, LOW);
  } else {
    // ‡∏õ‡∏Å‡∏ï‡∏¥: LED ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á + LED ‡πÅ‡∏î‡∏á‡∏î‡∏±‡∏ö
    digitalWrite(LED_GREEN_PIN, HIGH);
    digitalWrite(LED_RED_PIN, LOW);
  }
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
// ===========================================

void showRecommendations() {
  Serial.println("üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:");
  
  bool hasRecommendation = false;
  
  // ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏µ‡πÄ‡∏ó‡∏ô
  if(methane_ppm < 200) {
    Serial.println("   üî• ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô‡∏ï‡πà‡∏≥: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≤‡∏£‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥");
    hasRecommendation = true;
  } else if(methane_ppm > METHANE_WARNING_LEVEL) {
    Serial.println("   üî• ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô‡∏™‡∏π‡∏á: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡πà‡∏ß");
    hasRecommendation = true;
  }
  
  // ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢
  if(ammonia_ppm > AMMONIA_WARNING_LEVEL) {
    Serial.println("   üí® ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏™‡∏π‡∏á: ‡∏•‡∏î‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≤‡∏£‡πå‡∏ö‡∏≠‡∏ô");
    hasRecommendation = true;
  }
  
  // ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö H2S
  if(h2s_ppm > H2S_WARNING_LEVEL) {
    Serial.println("   ‚ò†Ô∏è  H2S ‡∏™‡∏π‡∏á: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ô‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ô‡∏ú‡∏™‡∏°");
    hasRecommendation = true;
  }
  
  // ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö pH
  if(ph_value < PH_MIN_OPTIMAL) {
    Serial.println("   üìè pH ‡∏ï‡πà‡∏≥ (‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏î): ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≤‡∏£‡∏î‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏π‡∏ô‡∏Ç‡∏≤‡∏ß");
    hasRecommendation = true;
  } else if(ph_value > PH_MAX_OPTIMAL) {
    Serial.println("   üìè pH ‡∏™‡∏π‡∏á (‡πÄ‡∏õ‡πá‡∏ô‡∏î‡πà‡∏≤‡∏á): ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≤‡∏£‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏î‡∏™‡∏≤‡∏£‡∏î‡πà‡∏≤‡∏á");
    hasRecommendation = true;
  }
  
  if(!hasRecommendation) {
    Serial.println("   ‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ - ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°");
  }
  
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
// ===========================================

void updateStatistics() {
  // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏Å‡πä‡∏≤‡∏ã
  if(methane_ppm > max_methane) max_methane = methane_ppm;
  if(ammonia_ppm > max_ammonia) max_ammonia = ammonia_ppm;
  if(h2s_ppm > max_h2s) max_h2s = h2s_ppm;
  
  // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á pH
  if(ph_value > max_ph) max_ph = ph_value;
  if(ph_value < min_ph) min_ph = ph_value;
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
// ===========================================

void showStatistics() {
  Serial.println("üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö):");
  Serial.println("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
  Serial.print("‚îÇ ‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î      : "); 
  Serial.print(total_readings); Serial.println(" ‡∏Ñ‡∏£‡∏±‡πâ‡∏á             ‚îÇ");
  Serial.print("‚îÇ ‡∏°‡∏µ‡πÄ‡∏ó‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î         : "); 
  Serial.print(max_methane, 1); Serial.println(" ppm             ‚îÇ");
  Serial.print("‚îÇ ‡πÅ‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î      : "); 
  Serial.print(max_ammonia, 1); Serial.println(" ppm             ‚îÇ");
  Serial.print("‚îÇ H2S ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î          : "); 
  Serial.print(max_h2s, 1); Serial.println(" ppm             ‚îÇ");
  Serial.print("‚îÇ pH ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î           : "); 
  Serial.print(max_ph, 2); Serial.println("                 ‚îÇ");
  Serial.print("‚îÇ pH ‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î           : "); 
  Serial.print(min_ph, 2); Serial.println("                 ‚îÇ");
  Serial.println("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");
  Serial.println();
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° - ‡∏Å‡∏≤‡∏£ Calibrate pH BNC Sensor Module
// ===========================================

void calibratePH() {
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Calibrate ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå pH BNC Module
  // ‡πÉ‡∏ä‡πâ pH Buffer Solutions: pH 4.0, pH 7.0, ‡πÅ‡∏•‡∏∞ pH 10.0
  
  Serial.println("üîß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ Calibrate ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå pH BNC Module...");
  Serial.println("üìã ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏£‡∏•‡∏∞‡∏•‡∏≤‡∏¢ pH Buffer: pH 4.0, pH 7.0, pH 10.0");
  Serial.println();
  
  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: Calibrate ‡∏ó‡∏µ‡πà pH 7.0 (Neutral Point)
  Serial.println("‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏Å‡∏≤‡∏£ Calibrate ‡∏ó‡∏µ‡πà pH 7.0");
  Serial.println("1. ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß BNC Probe ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡∏Å‡∏•‡∏±‡πà‡∏ô");
  Serial.println("2. ‡πÄ‡∏ä‡πá‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏´‡πâ‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏¥‡∏ä‡∏ä‡∏π‡πà");
  Serial.println("3. ‡∏à‡∏∏‡πà‡∏°‡∏´‡∏±‡∏ß Probe ‡∏•‡∏á‡πÉ‡∏ô pH 7.0 Buffer");
  Serial.println("4. ‡∏£‡∏≠ 2-3 ‡∏ô‡∏≤‡∏ó‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£");
  Serial.println("5. ‡∏Å‡∏î Enter ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°...");
  
  // ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏Å‡∏î Enter
  while(Serial.available() == 0) {
    delay(100);
  }
  while(Serial.available() > 0) {
    Serial.read(); // Clear buffer
  }
  
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà pH 7.0
  float ph7_voltage = 0;
  for(int i = 0; i < 20; i++) {
    ph7_voltage += (analogRead(PH_PIN) / 1023.0) * 5.0;
    delay(100);
  }
  ph7_voltage /= 20.0;
  
  Serial.print("üìä ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏ó‡∏µ‡πà pH 7.0: ");
  Serial.print(ph7_voltage, 3);
  Serial.println(" V");
  
  // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: Calibrate ‡∏ó‡∏µ‡πà pH 4.0 (Acid Point)
  Serial.println("\n‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏Å‡∏≤‡∏£ Calibrate ‡∏ó‡∏µ‡πà pH 4.0");
  Serial.println("1. ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏±‡∏ß Probe ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡∏Å‡∏•‡∏±‡πà‡∏ô");
  Serial.println("2. ‡πÄ‡∏ä‡πá‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏´‡πâ‡∏á");
  Serial.println("3. ‡∏à‡∏∏‡πà‡∏°‡∏´‡∏±‡∏ß Probe ‡∏•‡∏á‡πÉ‡∏ô pH 4.0 Buffer");
  Serial.println("4. ‡∏£‡∏≠ 2-3 ‡∏ô‡∏≤‡∏ó‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£");
  Serial.println("5. ‡∏Å‡∏î Enter ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°...");
  
  while(Serial.available() == 0) {
    delay(100);
  }
  while(Serial.available() > 0) {
    Serial.read();
  }
  
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà pH 4.0
  float ph4_voltage = 0;
  for(int i = 0; i < 20; i++) {
    ph4_voltage += (analogRead(PH_PIN) / 1023.0) * 5.0;
    delay(100);
  }
  ph4_voltage /= 20.0;
  
  Serial.print("üìä ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏ó‡∏µ‡πà pH 4.0: ");
  Serial.print(ph4_voltage, 3);
  Serial.println(" V");
  
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Slope ‡πÅ‡∏•‡∏∞ Offset
  float slope = (4.0 - 7.0) / (ph4_voltage - ph7_voltage);
  float offset = 7.0 - slope * ph7_voltage;
  
  Serial.println("\nüßÆ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì:");
  Serial.print("   Slope: ");
  Serial.println(slope, 4);
  Serial.print("   Offset: ");
  Serial.println(offset, 4);
  
  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏•‡∏á EEPROM (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ)
  EEPROM.put(0, slope);
  EEPROM.put(4, offset);
  EEPROM.put(8, ph7_voltage);
  
  Serial.println("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ Calibration ‡∏•‡∏á EEPROM ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
  Serial.println("üîÑ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà...");
  Serial.println();
}

void loadCalibrationData() {
  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ Calibration ‡∏à‡∏≤‡∏Å EEPROM
  float stored_slope, stored_offset, stored_neutral;
  
  EEPROM.get(0, stored_slope);
  EEPROM.get(4, stored_offset);
  EEPROM.get(8, stored_neutral);
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if(!isnan(stored_slope) && !isnan(stored_offset) && 
     stored_slope > -10 && stored_slope < -3 &&
     stored_neutral > 1.0 && stored_neutral < 4.0) {
    
    Serial.println("üì• ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ Calibration ‡∏à‡∏≤‡∏Å EEPROM:");
    Serial.print("   Slope: "); Serial.println(stored_slope, 4);
    Serial.print("   Offset: "); Serial.println(stored_offset, 4);
    Serial.print("   Neutral Voltage: "); Serial.print(stored_neutral, 3); Serial.println(" V");
    Serial.println("‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ Calibration ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ");
  } else {
    Serial.println("‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤ Calibration ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
    Serial.println("üí° ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Calibrate ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô");
  }
  Serial.println();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ pH ‡πÉ‡∏´‡∏°‡πà (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å EEPROM ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
float convertToPH_Calibrated(float voltage) {
  float stored_slope, stored_offset;
  
  EEPROM.get(0, stored_slope);
  EEPROM.get(4, stored_offset);
  
  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ Calibration ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  if(!isnan(stored_slope) && !isnan(stored_offset) && 
     stored_slope > -10 && stored_slope < -3) {
    
    float ph = stored_slope * voltage + stored_offset;
    
    if(ph < 0) ph = 0;
    if(ph > 14) ph = 14;
    
    return ph;
  } else {
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ Default
    return convertToPH(voltage);
  }
}

void resetStatistics() {
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
  total_readings = 0;
  max_methane = 0.0;
  max_ammonia = 0.0;
  max_h2s = 0.0;
  min_ph = 14.0;
  max_ph = 0.0;
  system_start_time = millis();
  
  Serial.println("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö
// ===========================================

void systemDiagnostics() {
  Serial.println("üîç ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö:");
  Serial.println("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏ü
  float vcc = readVCC();
  Serial.print("‚îÇ ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏ü       : "); 
  Serial.print(vcc, 2); Serial.println(" V               ‚îÇ");
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢
  bool sensor_ok = true;
  if(mq4_raw == 0 || mq4_raw == 1023) {
    Serial.println("‚îÇ ‚ö†Ô∏è  MQ-4 ‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢                  ‚îÇ");
    sensor_ok = false;
  }
  if(mq135_raw == 0 || mq135_raw == 1023) {
    Serial.println("‚îÇ ‚ö†Ô∏è  MQ-135 ‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢                ‚îÇ");
    sensor_ok = false;
  }
  if(mq136_raw == 0 || mq136_raw == 1023) {
    Serial.println("‚îÇ ‚ö†Ô∏è  MQ-136 ‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢                ‚îÇ");
    sensor_ok = false;
  }
  if(ph_raw == 0 || ph_raw == 1023) {
    Serial.println("‚îÇ ‚ö†Ô∏è  pH Sensor ‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢             ‚îÇ");
    sensor_ok = false;
  }
  
  if(sensor_ok) {
    Serial.println("‚îÇ ‚úÖ ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥         ‚îÇ");
  }
  
  Serial.println("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");
}

// ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏ü
// ===========================================

float readVCC() {
  // ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏ü‡∏ú‡πà‡∏≤‡∏ô Internal Reference
  // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö
  
  #if defined(__AVR_ATmega328P__)
    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Arduino Uno/Nano
    ADMUX = _BV(REFS0) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1);
    delay(2);
    ADCSRA |= _BV(ADSC);
    while (bit_is_set(ADCSRA,ADSC));
    
    uint8_t low  = ADCL;
    uint8_t high = ADCH;
    
    long result = (high<<8) | low;
    result = 1125300L / result;
  // ===========================================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å Serial
// ===========================================

void checkSerialCommands() {
  if(Serial.available() > 0) {
    String command = Serial.readString();
    command.trim();
    command.toUpperCase();
    
    if(command == "CAL") {
      calibratePH();
    } else if(command == "RESET") {
      resetStatistics();
    } else if(command == "DIAG") {
      systemDiagnostics();
    } else if(command == "HELP") {
      printHelp();
    } else {
      Serial.print("‚ùì ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å: ");
      Serial.println(command);
      Serial.println("üí° ‡∏û‡∏¥‡∏°‡∏û‡πå 'HELP' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ");
    }
    Serial.println();
  }
}

void printHelp() {
  Serial.println("üìñ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:");
  Serial.println("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
  Serial.println("‚îÇ CAL   - Calibrate ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå pH       ‚îÇ");
  Serial.println("‚îÇ RESET - ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô          ‚îÇ");
  Serial.println("‚îÇ DIAG  - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö            ‚îÇ");
  Serial.println("‚îÇ HELP  - ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠            ‚îÇ");
  Serial.println("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");
}
